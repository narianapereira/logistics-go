name: Go CI/CD Pipeline (GKE & Terraform)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/logistics-go

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Run Go tests
        run: go test -v ./...

  build-and-push-image:
    name: Build Docker image and Push
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile 
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest, ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          
  terraform_gke_deploy:
    name: Deploy App
    needs: build-and-push-image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          components:
            - gke-gcloud-auth-plugin    
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials logistics-go-cluster \
            --region ${{ secrets.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}  
        
      - name: Terraform Init
        run: terraform init
        working-directory: ./infra
        
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra
        env:
          TF_VAR_app_docker_image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}  
